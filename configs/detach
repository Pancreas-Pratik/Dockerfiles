#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
    echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
    msg "Error : $?"
    exit 1
}

function mcd {
    mkdir -p "$1" || fail
    cd "$1" || fail
}

function rmifex {
    allargs="'$*'"
    msg "rm_if_ex ${allargs}"
    for value in "$@"
    do         
        if [ -f ${value} ]; then
            rm -rf ${value} || fail
        fi
    done
}

function lngame {
    allargs="'$*'"
    msg "ln_game ${allargs}"
    for value in "$@"
    do         
        if [ -f /usr/games/${value} ]; then
            ln -s /usr/games/${value} /usr/local/bin/${value} || fail
        fi
    done
}

function mv_shortcuts_basic {
    msg "Moving basic shortcuts for all Ubuntu."
    # To desktop
    cp -f ${THIS_ROOT}/shortcuts/common/all/code.desktop ${TARGET_DESKTOP}/ || fail
    cp -f ${THIS_ROOT}/shortcuts/common/all/peazip.desktop ${TARGET_DESKTOP}/ || fail
    # To menu
    cp -f ${THIS_ROOT}/shortcuts/common/all/code.desktop ${TARGET_MENU}/ || fail
    cp -f ${THIS_ROOT}/shortcuts/common/all/jupyter-lab.desktop ${TARGET_MENU}/ || fail

    # With PyCharm
    if [[ "${WITH_EXTRA_APPS}" = *"p"* ]]; then
        cp -f ${THIS_ROOT}/shortcuts/common/all/PyCharm.desktop ${TARGET_USER_MENU}/ || fail
        cp -f ${THIS_ROOT}/shortcuts/common/all/PyCharm.desktop ${TARGET_DESKTOP}/ || fail
    fi
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        # With GIMP
        if [[ "${WITH_EXTRA_APPS}" = *"g"* ]] || [[ -s "${TARGET_MENU}/gimp.desktop" ]]; then
            cp -f ${THIS_ROOT}/shortcuts/chinese/all/gimp.desktop ${TARGET_MENU}/ || fail
            cp -f ${THIS_ROOT}/shortcuts/chinese/all/gimp.desktop ${TARGET_DESKTOP}/ || fail
        fi
    else
        # With GIMP
        if [[ "${WITH_EXTRA_APPS}" = *"g"* ]] || [[ -s "${TARGET_MENU}/gimp.desktop" ]]; then
            cp -f ${THIS_ROOT}/shortcuts/english/all/gimp.desktop ${TARGET_MENU}/ || fail
            cp -f ${THIS_ROOT}/shortcuts/english/all/gimp.desktop ${TARGET_DESKTOP}/ || fail
        fi
    fi
}

function mv_shortcuts_20_04 {
    msg "Moving basic shortcuts for Ubuntu 20.04."
    # To desktop
    cp -f ${THIS_ROOT}/shortcuts/common/20-04/sublime_text.desktop ${TARGET_DESKTOP}/ || fail
    
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        cp -f ${THIS_ROOT}/shortcuts/chinese/20-04/google-chrome.desktop ${TARGET_MENU}/ || fail
        cp -f ${THIS_ROOT}/shortcuts/chinese/20-04/google-chrome.desktop ${TARGET_DESKTOP}/ || fail
    else
        cp -f ${THIS_ROOT}/shortcuts/english/20-04/google-chrome.desktop ${TARGET_MENU}/ || fail
        cp -f ${THIS_ROOT}/shortcuts/english/20-04/google-chrome.desktop ${TARGET_DESKTOP}/ || fail
    fi
}

function mv_shortcuts_18or16_04 {
    msg "Moving basic shortcuts for Ubuntu 18.04 / 16.04."
    # To desktop
    cp -f ${THIS_ROOT}/shortcuts/common/18or16-04/notepadqq.desktop ${TARGET_DESKTOP}/ || fail
    
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        cp -f ${THIS_ROOT}/shortcuts/chinese/18or16-04/chromium-browser.desktop ${TARGET_MENU}/ || fail
        cp -f ${THIS_ROOT}/shortcuts/chinese/18or16-04/chromium-browser.desktop ${TARGET_DESKTOP}/ || fail
    else
        cp -f ${THIS_ROOT}/shortcuts/english/18or16-04/chromium-browser.desktop ${TARGET_MENU}/ || fail
        cp -f ${THIS_ROOT}/shortcuts/english/18or16-04/chromium-browser.desktop ${TARGET_DESKTOP}/ || fail
    fi
}

function mv_shortcuts_py36p {
    msg "Moving basic shortcuts for Python 3.6+."
    cp -f ${THIS_ROOT}/shortcuts/common/all/ViTables.desktop ${TARGET_MENU}/ || fail
}

function mv_panel_20_04 {
    msg "Moving panel shortcuts for Ubuntu 20.04."
    rm -rf ${TARGET_XFCE4CONFIG}/panel/* || fail
    wget -O- https://github.com/cainmagi/Dockerfiles/releases/download/xubuntu-v1.5-u20.04/xconfigs-u20-04.tar.xz | tar xJ -C ${TARGET_CONFIG}/ || fail
    # Replace google-chrome
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        cp -f ${THIS_ROOT}/shortcuts/chinese/20-04/google-chrome.desktop ${TARGET_XFCE4CONFIG}/panel/launcher-19/16108478917.desktop || fail
    else
        cp -f ${THIS_ROOT}/shortcuts/english/20-04/google-chrome.desktop ${TARGET_XFCE4CONFIG}/panel/launcher-19/16108478917.desktop || fail
    fi
}

function mv_panel_18or16_04 {
    msg "Moving panel shortcuts for Ubuntu 18.04 / 16.04."
    rm -rf ${TARGET_XFCE4CONFIG}/panel/* || fail
    wget -O- https://github.com/cainmagi/Dockerfiles/releases/download/xubuntu-v1.5-u20.04/xconfigs-u18or16-04.tar.xz | tar xJ -C ${TARGET_CONFIG}/ || fail
    # Replace chromium
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        cp -f ${THIS_ROOT}/shortcuts/chinese/18or16-04/chromium-browser.desktop ${TARGET_XFCE4CONFIG}/panel/launcher-11/16108500487.desktop || fail
    else
        cp -f ${THIS_ROOT}/shortcuts/english/18or16-04/chromium-browser.desktop ${TARGET_XFCE4CONFIG}/panel/launcher-11/16108500487.desktop || fail
    fi
}

MODE=basic

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    case "$KEY" in
        MODE)  MODE=${VALUE} ;;
        *)   
    esac    
done

USER_ROOT=/home/xubuntu
THIS_ROOT=/root/docker-configs
# The path for overwritting desktop apps.
TARGET_DESKTOP=${USER_ROOT}/Desktop
# The path for overwritting menu apps.
TARGET_MENU=/usr/share/applications
TARGET_USER_MENU=${USER_ROOT}/.local/share/applications
# The path for overwritting MIME types.
TARGET_CONFIG=${USER_ROOT}/.config
# The path for overwritting panel settings.
TARGET_XFCE4CONFIG=${TARGET_CONFIG}/xfce4

msg "Detach script."

if [ "x${MODE}" = "xbasic" ]
then 
    msg "Detach script, basic mode."

    msg "Create user xubuntu ..."
    apt-get update || fail
    apt-get install -y apt-utils || fail
    apt-get install -y sudo || fail # Install sudo package
    useradd -ms /bin/bash xubuntu || fail # Add the user
    passwd -d xubuntu || fail # Delete the password
    usermod -a -G sudo xubuntu || fail # Make the user admin
    
    msg "Move files to /root"
    chmod +rwx ${THIS_ROOT} --recursive || fail
    cp -f ${THIS_ROOT}/.bashrc /root/ || fail
    mkdir -p /root/scripts || fail
    wget -O /root/scripts/get-pyver.py https://github.com/cainmagi/Dockerfiles/releases/download/xubuntu-v1.5-u20.04/get-pyver.py || fail
    chmod +rwx /root/scripts/get-pyver.py || fail

    msg "Move files to /usr/local/bin."
    cp -f ${THIS_ROOT}/launch-jupyter /usr/local/bin || fail

    msg "Move files to /etc"
    echo "LC_ALL=en_US.UTF-8" >> /etc/environment
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    echo "LANG=en_US.UTF-8" > /etc/locale.conf
    cp -f ${THIS_ROOT}/locale.gen /etc || fail
    cp -f ${THIS_ROOT}/sudoers /etc || fail
    cp -f ${THIS_ROOT}/etc-profile /etc/profile || fail
    mkdir -p /etc/dpkg/dpkg.cfg.d || fail
    cp -f ${THIS_ROOT}/dpkg-excludes /etc/dpkg/dpkg.cfg.d/excludes || fail

    msg "Move files to ${USER_ROOT}/ subfolders"
    mkdir -p "${USER_ROOT}/.vnc" || fail
    mkdir -p "/root/.vnc" || fail
    cp -f ${THIS_ROOT}/vnc-xstartup ${USER_ROOT}/.vnc/xstartup || fail
    cp -f ${THIS_ROOT}/vnc-xstartup /root/.vnc/xstartup || fail
fi

if [ "x${MODE}" = "xshortcuts" ]
then
    apt-get update || fail
    apt-get -y install lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))
    CURIN_PY_VER=$(/usr/bin/python3 /root/scripts/get-pyver.py 2>&1)

    msg "Move shortcuts to the desktop and the menu."
    mkdir -p ${TARGET_DESKTOP} || fail
    mkdir -p ${TARGET_MENU} || fail
    mkdir -p ${TARGET_USER_MENU} || fail
    mkdir -p ${TARGET_CONFIG} || fail
    chmod +rw ${TARGET_DESKTOP} --recursive || fail
    chmod +rw ${TARGET_MENU} --recursive || fail
    chmod +rw ${TARGET_USER_MENU} --recursive || fail
    chmod +rw ${TARGET_CONFIG} --recursive || fail
    
    mv_shortcuts_basic || fail

    # Requirement: Ubuntu 20.04
    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        mv_shortcuts_20_04 || fail
    else
        mv_shortcuts_18or16_04 || fail
    fi

    # Requirement: Python 3.6+
    if [ "x${CURIN_PY_VER}" = "xpy36" ] || [ "x${CURIN_PY_VER}" = "xpy37+" ]
    then
        mv_shortcuts_py36p || fail
    fi

    msg "Move files to panel."
    mkdir -p ${TARGET_XFCE4CONFIG}/panel || fail
    chmod +rw ${TARGET_XFCE4CONFIG} --recursive || fail

    # Requirement: Ubuntu 20.04
    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        mv_panel_20_04 || fail
    else
        mv_panel_18or16_04 || fail
    fi
fi

if [ "x${MODE}" = "xclean" ]
then
    msg "Clean all files in \"${THIS_ROOT}\"."
    cp -f /root/.bashrc ${USER_ROOT}/ || fail
    chown xubuntu ${USER_ROOT} --recursive || fail
    chgrp xubuntu ${USER_ROOT} --recursive || fail
    chmod ug+rwx ${USER_ROOT} --recursive || fail
    rm -rf ${THIS_ROOT}/shortcuts || fail
    rm -rf ${THIS_ROOT}/dpkg-excludes || fail
    rm -rf ${THIS_ROOT}/etc-profile || fail
    rm -rf ${THIS_ROOT}/launch-jupyter || fail
    rm -rf ${THIS_ROOT}/.bashrc || fail
    rm -rf ${THIS_ROOT}/locale.gen || fail
    rm -rf ${THIS_ROOT}/sudoers || fail
    rm -rf ${THIS_ROOT}/vnc-xstartup || fail
    # Remove bad autostart.
    rmifex /etc/xdg/autostart/blueman.desktop /etc/xdg/autostart/gnome-software-service.desktop /etc/xdg/autostart/update-notifier.desktop || fail
fi

msg "Detach script finished."
