#!/bin/bash

. ~/.bashrc

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

function nvm_install_dir {
    if [ -n "$NVM_DIR" ]; then
        printf %s "${NVM_DIR}"
    else
        [ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm"
    fi
}
sudo_nvm_install_dir=$(declare -f nvm_install_dir)

function nvm_check_dirs {
    RUN_NVM_DIR_1="$(sudo NVM_DIR=$NVM_DIR bash -c "$sudo_nvm_install_dir; nvm_install_dir" | command sed "s:^$HOME:/root:")" || fail
    RUN_NVM_DIR_2="$(sudo NVM_DIR=$NVM_DIR bash -c "$sudo_nvm_install_dir; nvm_install_dir")" || fail
    if $(sudo [ -d $RUN_NVM_DIR_1 ]); then
        printf %s $RUN_NVM_DIR_1
    else
        if $(sudo [ -d $RUN_NVM_DIR_2 ]); then
            printf %s $RUN_NVM_DIR_2
        else
            printf %s ""
        fi
    fi
}

function run_with_nodejs {
    # Switch to root mode for getting the environment value.
    RUN_NVM_DIR=$(nvm_check_dirs) 
    # Some services could not be used in user mode, so we use the root mode.
    if $(sudo [ -s "$RUN_NVM_DIR/nvm.sh" ]) && $(sudo [ -s "$RUN_NVM_DIR/bash_completion" ])
    then
        sudo PATH=$PATH bash -c ". $RUN_NVM_DIR/nvm.sh \
        && . $RUN_NVM_DIR/bash_completion \
        && nvm use default \
        && $1" || fail
    else
        sudo PATH=$PATH bash -c "$1" || fail
    fi
}

run_with_nodejs "jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --notebook-dir=/ --NotebookApp.custom_display_url=http://localhost:8888/" || fail
