#!/bin/bash

source ~/.bashrc

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR_ERR='\033[1;31m'
COLOR='\033[1;32m'

function msg {
    echo -e "${COLOR}$(date): $1${RESET}"
}

function msgerr {
    echo -e "${COLOR_ERR}$(date): $1${RESET}"
}

function fail {
    msgerr "Error : $?"
    exit 1
}

function mcd {
    mkdir -p "$1" || fail
    cd "$1" || fail
}

function nvm_default_install_dir {
    [ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm"
}

function nvm_install_dir {
    if [ -n "$NVM_DIR" ]; then
        printf %s "${NVM_DIR}"
    else
        nvm_default_install_dir
    fi
}

function run_with_nodejs {
    RUN_NVM_DIR="$(nvm_install_dir)" || fail
    if [ -s "$RUN_NVM_DIR/nvm.sh" ] && [ -s "$RUN_NVM_DIR/bash_completion" ]
    then
        bash -c ". $RUN_NVM_DIR/nvm.sh \
        && . $RUN_NVM_DIR/bash_completion \
        && nvm use default \
        && $1" || fail
    else
        bash -c "$1" || fail
    fi
}

MODE="jupyter"
MODE_RUN_SCRIPT=""
ROOT_DIR="/homelocal"
PASSWORD=""
# Pass options from command line
for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    if [[ $KEY != '--*' ]]
    then
        VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    fi
    case "$KEY" in
            --bash)         MODE="bash" ;;
            --jlab)         MODE="jupyter" ;;
            script)         MODE_RUN_SCRIPT=${VALUE} ;;
            password)       PASSWORD=${VALUE} ;;
            rootdir)        ROOT_DIR=${VALUE} ;;
            *)
    esac    
done

MACHINE_IP=$(hostname -I | awk 'NR==1 {print $1}')
echo "Check script: ${LAUNCH_SCRIPT_ORIGINAL}"
if [ "x${LAUNCH_SCRIPT_ORIGINAL}" != "x" ]
then
    echo "Launch script: ${LAUNCH_SCRIPT_ORIGINAL}"
    bash $LAUNCH_SCRIPT_ORIGINAL echo "Finish launching."
fi

if [ "x${MODE}" = "xbash" ]
then
    exec bash
    exit 0
fi

if [ "x${MODE_RUN_SCRIPT}" != "x" ]
then
    echo "${MODE_RUN_SCRIPT}" | bash
    exit 0
fi

echo "-----------------------------------"
echo "       Jupyter Lab Container"
echo "           Yuchen Jin"
echo "-----------------------------------"
echo "This is a container used for launching jupyterlab."
echo "Use the following options to configure the lab:"
echo "    --bash: use this flag to open the interactive bash."
echo "    --jlab: use this flag to open the jupyter lab."
echo "    script: pass a string to bash and let the container to run it."
echo "    password: set the password of the lab manually."
echo "    rootdir: set the root directory of the lab."
echo "If not setting the password manually, users need to check the token shown in the terminal."
echo ""

echo "---------"
echo "Host IP:"
echo $MACHINE_IP
echo "---------"

# Fix the launch script option variety.
JUPYTERLAB_VERSION="$(jupyter lab --version)" || fail
JUPYTERLAB_VSPLIT=(${JUPYTERLAB_VERSION//./ }) || fail
JUPYTERLAB_V1=${JUPYTERLAB_VSPLIT[0]} || fail


OPTION_PASSWORD=""
if [ "x${PASSWORD}" != "x" ]
then
    if [ "x${JUPYTERLAB_V1}" = "x3" ]
    then
        OPTION_PASSWORD="--ServerApp.token=${PASSWORD}"
    else
        OPTION_PASSWORD="--NotebookApp.token=${PASSWORD}"
    fi
fi

OPTION_ROOT=""
if [ "x${ROOT_DIR}" != "x" ]
then
    if [ "x${JUPYTERLAB_V1}" = "x3" ]
    then
        OPTION_ROOT="--ServerApp.notebook_dir=${ROOT_DIR}"
    else
        OPTION_ROOT="--NotebookApp.notebook_dir=${ROOT_DIR}"
    fi
fi


if [ "x${JUPYTERLAB_V1}" = "x3" ]
then
    run_with_nodejs "jupyter lab --ServerApp.ip=${MACHINE_IP} --ServerApp.port=6080 --ServerApp.open_browser=False --ExtensionApp.open_browser=False --ServerApp.allow_root=True ${OPTION_PASSWORD} ${OPTION_ROOT}"
else
    run_with_nodejs "jupyter lab --ip=${MACHINE_IP} --port=6080 --no-browser --allow-root ${OPTION_PASSWORD} ${OPTION_ROOT}"
fi


exec "/bin/bash"
