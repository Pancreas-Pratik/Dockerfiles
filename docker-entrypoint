#!/bin/bash

source ~/.bashrc

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

BASH=false
ROOT_DIR="/homelocal"
PASSWORD=""
# Pass options from command line
for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    if [[ $KEY != '--*' ]]
    then
        VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    fi
    case "$KEY" in
            --bash)         BASH=true ;;
            password)       PASSWORD=${VALUE} ;;
            rootdir)        ROOT_DIR=${VALUE} ;;
            *)   
    esac    
done

MACHINE_IP=$(hostname -I | awk 'NR==1 {print $1}')
echo "Check script: ${LAUNCH_SCRIPT_ORIGINAL}"
if [ "x${LAUNCH_SCRIPT_ORIGINAL}" != "x" ]
then
    echo "Launch script: ${LAUNCH_SCRIPT_ORIGINAL}"
    bash $LAUNCH_SCRIPT_ORIGINAL echo "Finish launching."
fi

if $BASH
then
    exec bash
    exit 0
fi

echo "-----------------------------------"
echo "       Jupyter Lab Container"
echo "           Yuchen Jin"
echo "-----------------------------------"
echo "This is a container used for launching jupyterlab."
echo "Use the following options to configure the lab:"
echo "    --password: set the password of the lab manually."
echo "    --rootdir: set the root directory of the lab."
echo "If not setting the password manually, users need to check the token shown in the terminal."
echo ""

echo "---------"
echo "Host IP:"
echo $MACHINE_IP
echo "---------"

OPTION_PASSWORD=""
if [ "x${PASSWORD}" != "x" ]
then
    OPTION_PASSWORD="--NotebookApp.token='${PASSWORD}'"
fi

OPTION_ROOT=""
if [ "x${ROOT_DIR}" != "x" ]
then
    OPTION_ROOT="--notebook-dir=${ROOT_DIR}"
fi

jupyter lab --ip=${MACHINE_IP} --port=6080 --no-browser ${OPTION_PASSWORD} --allow-root ${OPTION_ROOT}

exec "/bin/bash"
