#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

# The script for protobuf-3.5.1 and libbootstrap-1.66
apt-get -y update -qq || fail && apt-get -y install \
  autoconf \
  automake \
  build-essential \
  cmake \
  git-core \
  pkg-config \
  wget \
  zlib1g-dev \
  build-essential \
  software-properties-common \
  python-software-properties \
  python3-software-properties || fail

apt-get -y update || fail && apt-get -y upgrade || fail && apt-get -y dist-upgrade || fail && apt-get -y autoremove || fail && apt-get -y autoclean || fail

# Switch to gcc-6 and check the version
update-alternatives --install /usr/bin/gcc gcc /usr/local/bin/gcc-6 90 --slave /usr/bin/g++ g++ /usr/local/bin/g++-6 || fail
#update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 90 --slave /usr/bin/g++ g++ /usr/bin/g++-5 || fail
GCCVERSION=$(gcc --version | grep ^gcc | sed 's/^.* //g')
if [ "x$GCCVERSION" != "x6.3.0" ]; then
  msg "Error: GCC version is $GCCVERSION, but we need 6.3.0"
  exit 1
fi

SOURCE_ROOT_PATH="/apps/source"
BUILD_PATH="/apps/build"
BIN_PATH="/usr/local"
mkdir -p $SOURCE_ROOT_PATH $BUILD_PATH $BIN_PATH || fail

# Build and install protobuf
cd $SOURCE_ROOT_PATH || fail
git clone -b 'v3.5.1' --single-branch --depth 1 https://github.com/google/protobuf.git || fail
cd protobuf || fail
./autogen.sh || fail
cd $BUILD_PATH || fail
mkdir -p protobuf || fail && cd protobuf || fail
$SOURCE_ROOT_PATH/protobuf/configure           \
    --prefix=$BIN_PATH || fail
make -j32 || fail
make -j32 install || fail
ldconfig || fail

# Build and install bootstrap
cd $SOURCE_ROOT_PATH || fail
wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.bz2 || fail
tar --bzip2 -xf boost_1_66_0.tar.bz2 || fail
cd boost_1_66_0 || fail
./bootstrap.sh      \
    --prefix=$BIN_PATH || fail
./b2 install || fail
ln /usr/local/lib/libcaffe-nv.so /usr/local/lib/libcaffe.so || fail
ldconfig || fail

update-alternatives --install /usr/bin/gcc gcc /usr/local/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/local/bin/g++-6
