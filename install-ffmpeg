#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

# The script for installing newest ffmpeg
apt-get -y update -qq || fail && apt-get -y install \
  autoconf \
  automake \
  build-essential \
  cmake \
  git-core \
  libass-dev \
  libfreetype6-dev \
  libsdl2-dev \
  libtool \
  libva-dev \
  libvdpau-dev \
  libvorbis-dev \
  libxcb1-dev \
  libxcb-shm0-dev \
  libxcb-xfixes0-dev \
  pkg-config \
  texinfo \
  wget \
  zlib1g-dev \
  doxygen || fail

apt-get -y update || fail && apt-get -y upgrade || fail && apt-get -y dist-upgrade || fail && apt-get -y autoremove || fail && apt-get -y autoclean || fail

# Create the compile folder
SOURCE_PATH="/apps/source/ffmpeg"
BUILD_PATH="/apps/build/ffmpeg"
BIN_PATH="/usr/local/bin"
mkdir -p $SOURCE_PATH $BIN_PATH $BUILD_PATH || fail

# Switch to gcc-5
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 90 --slave /usr/bin/g++ g++ /usr/bin/g++-5 || fail

# Install dependencies: NASM
cd $SOURCE_PATH || fail && \
wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.bz2 || fail && \
tar xjvf nasm-2.13.03.tar.bz2 || fail && \
cd nasm-2.13.03 || fail && \
./autogen.sh || fail && \
PATH="$BIN_PATH:$PATH" ./configure --prefix=$BUILD_PATH --bindir=$BIN_PATH || fail && \
make -j32 || fail && \
make install || fail

# Install dependencies: YASM
cd $SOURCE_PATH || fail && \
wget -O yasm-1.3.0.tar.gz https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz || fail && \
tar xzvf yasm-1.3.0.tar.gz || fail && \
cd yasm-1.3.0 || fail && \
./configure --prefix=$BUILD_PATH --bindir=$BIN_PATH || fail && \
make -j32 || fail && \
make install || fail

# Install dependencies: libx264
cd $SOURCE_PATH || fail && \
git -C x264 pull 2> /dev/null || git clone --depth 1 https://git.videolan.org/git/x264 || fail && \
cd x264 || fail && \
PATH="$BIN_PATH:$PATH" PKG_CONFIG_PATH="$BUILD_PATH/lib/pkgconfig:$PKG_CONFIG_PATH" ./configure --prefix=$BUILD_PATH --bindir=$BIN_PATH --enable-shared --enable-static --enable-pic || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install dependencies: libx265
apt-get -y install mercurial libnuma-dev || fail && \
cd $SOURCE_PATH || fail && \
if cd x265 2> /dev/null; then hg pull || fail && hg update || fail; else hg clone https://bitbucket.org/multicoreware/x265 || fail; fi && \
mkdir -p "$BUILD_PATH/x265" && cd "$BUILD_PATH/x265" || fail && \
PATH="$BIN_PATH:$PATH" CXXFLAGS="$CXXFLAGS -fpermissive" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$BUILD_PATH -DENABLE_SHARED=on "$SOURCE_PATH/x265/source" || fail && \
PATH="$BIN_PATH:$PATH" CXXFLAGS="$CXXFLAGS -fpermissive" make -j32 || fail && \
make install || fail && \
cp $BUILD_PATH/bin/x265 $BIN_PATH || fail

# Install dependencies: libvpx
cd $SOURCE_PATH || fail && \
git -C libvpx pull 2> /dev/null || git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git || fail && \
cd libvpx || fail && \
PATH="$BIN_PATH:$PATH" ./configure --prefix=$BUILD_PATH --enable-pic --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install dependencies: libfdk-aac
cd $SOURCE_PATH || fail && \
git -C fdk-aac pull 2> /dev/null || git clone --depth 1 https://github.com/mstorsjo/fdk-aac || fail && \
cd fdk-aac || fail && \
autoreconf -fiv || fail && \
./configure --prefix=$BUILD_PATH --enable-shared || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install dependencies: libmp3lame
cd $SOURCE_PATH || fail && \
wget -O lame-3.100.tar.gz https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz || fail && \
tar xzvf lame-3.100.tar.gz || fail && \
cd lame-3.100 || fail && \
PATH="$BIN_PATH:$PATH" ./configure --prefix=$BUILD_PATH --bindir=$BIN_PATH --enable-shared --enable-nasm || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install dependencies: libopus
cd $SOURCE_PATH || fail && \
git -C opus pull 2> /dev/null || git clone --depth 1 https://github.com/xiph/opus.git || fail && \
cd opus || fail && \
./autogen.sh || fail && \
./configure --prefix=$BUILD_PATH --enable-shared || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install dependencies: libaom
cd $SOURCE_PATH || fail && \
git -C aom pull 2> /dev/null || git clone --depth 1 https://aomedia.googlesource.com/aom || fail && \
mkdir -p "$BUILD_PATH/aom" || fail && cd "$BUILD_PATH/aom" || fail && \
PATH="$BIN_PATH:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$BUILD_PATH" -DENABLE_SHARED=on -DCONFIG_PIC=1 -DENABLE_NASM=on "$SOURCE_PATH/aom" || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail && \
cp $BUILD_PATH/bin/aom* $BIN_PATH || fail

# Install dependencies for GPU: ffnvcodec
cd $SOURCE_PATH || fail && \
git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git || fail && \
cd nv-codec-headers || fail && \
PATH="$BIN_PATH:$PATH" make -j32 || fail && \
make install || fail

# Install ffmpeg
cd $SOURCE_PATH || fail && \
wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 || fail && \
tar xjvf ffmpeg-snapshot.tar.bz2 || fail && \
cd ffmpeg || fail && \
PATH="$BIN_PATH:$PATH" PKG_CONFIG_PATH="$BUILD_PATH/lib/pkgconfig:$PKG_CONFIG_PATH" ./configure \
  --prefix=$BUILD_PATH \
  --pkg-config-flags="--static" \
  --extra-cflags="-I$BUILD_PATH/include -I/usr/local/cuda/include" \
  --extra-ldflags="-L$BUILD_PATH/lib -L/usr/local/cuda/lib64" \
  --extra-libs="-lpthread -lm" \
  --bindir=$BUILD_PATH \
  --enable-avresample \
  --enable-cuda \
  --enable-cuvid \
  --enable-nvenc \
  --enable-libnpp \
  --enable-gpl \
  --enable-libaom \
  --enable-libass \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libx264 \
  --enable-libx265 \
  --enable-shared \
  --enable-nonfree || fail && \
PATH="$BUILD_PATH:$PATH" make -j32 || fail && \
make install || fail && \
hash -r && ldconfig || fail

# Switch back
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 50 --slave /usr/bin/g++ g++ /usr/bin/g++-5 || fail

# Make path configuration and set them with 
echo "export LD_LIBRARY_PATH=$BUILD_PATH/lib:\$LD_LIBRARY_PATH" >> ~/.bashrc 
echo "export PATH=$BUILD_PATH:\$PATH" >> ~/.bashrc 
echo "export PKG_CONFIG_PATH=$BUILD_PATH/lib/pkgconfig:\$PKG_CONFIG_PATH" >> ~/.bashrc 
echo "export PKG_CONFIG_LIBDIR=$BUILD_PATH/lib/:\$PKG_CONFIG_LIBDIR" >> ~/.bashrc
export LD_LIBRARY_PATH=$BUILD_PATH/lib:$LD_LIBRARY_PATH
export PATH=$BUILD_PATH:$PATH
export PKG_CONFIG_PATH=$BUILD_PATH/lib/pkgconfig:$PKG_CONFIG_PATH
export PKG_CONFIG_LIBDIR=$BUILD_PATH/lib/:$PKG_CONFIG_LIBDIR

echo "As the instruction from ffmpeg, you need to run \"source ~/.profile\" now."
