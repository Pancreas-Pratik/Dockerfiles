#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

MODE=desktop
USER_ROOT=/home/xubuntu
CUR_PY_VER=$(python3 /root/scripts/get-pyver.py 2>&1)
HAS_CONDA=$(python3 /root/scripts/get-conda-path.py -m use-conda 2>&1)

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    case "$KEY" in
        MODE)          MODE=${VALUE} ;;
        *)
    esac    
done

if [[ "x${ADDR_PROXY}" != "xunset" ]]; then
    export http_proxy=${ADDR_PROXY};
    export https_proxy=${ADDR_PROXY};
    export no_proxy="127.0.0.1, localhost";
    msg "Successfully set the proxy to ${ADDR_PROXY}."
    export USE_CURL=0
else
    export USE_CURL=1
fi

if [ "x${MODE}" = "xdesktop" ]
then
    msg "Begin to install the desktop."
    if [ -d "/var/cache/app-info/xapian/default" ]; then
        chmod -R a+rX,u+w /var/cache/app-info/xapian/default || fail
    fi
    apt-get update -y || fail
    apt-get install -y lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))

    # Install xfce4 Desktop
    apt-get install -y dbus-x11 libx11-6 libx11-data libx11-protocol-perl libx11-xcb1 x11-apps \
        x11-common x11-session-utils x11-utils x11-xkb-utils x11-xserver-utils || fail
    # Install dialog
    apt-get install -y dialog || fail
    # Install desktop applications.
    apt-get install -y xubuntu-desktop synaptic language-selector-gnome || fail
    apt-get install -y xfce4 || fail
    # Install the xfce4 addons
    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        # Install libgtk
        apt-get install -y libgtk-3-bin libgtk2.0-bin libgtk-3-dev libgtk2.0-dev libgirepository1.0-dev \
            libgraphite2-utils || fail
        # Install xfce-plugin
        apt-get install -y libxfce4panel-2.0-4 libxfce4ui-1-0 libxfce4ui-2-0 libxfce4ui-common \
            libxfce4util-common libxfce4util7 xfce4-appfinder xfce4-notifyd xfce4-panel xfce4-session xfce4-settings \
            gtk-update-icon-cache xfce4-indicator-plugin xfce4-power-manager xfce4-pulseaudio-plugin xfce4-screenshooter \
            xfce4-statusnotifier-plugin xfce4-terminal xfce4-whiskermenu-plugin xfce4-cpugraph-plugin xfce4-dict \
            xfce4-mailwatch-plugin xfce4-netload-plugin xfce4-notes-plugin xfce4-goodies xfce4-places-plugin \
            xfce4-systemload-plugin xfce4-taskmanager xfce4-verve-plugin xfce4-weather-plugin xfce4-xkb-plugin \
            xfce4-mpc-plugin xfpanel-switch xubuntu-community-wallpapers xul-ext-ubufox mousepad ubuntu-sounds \
            gnome-system-monitor terminator || fail
        apt-get install -y xfce4-battery-plugin xfce4-settings xfce4-clipman-plugin xfce4-datetime-plugin \
            xfce4-sensors-plugin xfce4-cpufreq-plugin xfce4-diskperf-plugin xfce4-fsguard-plugin \
            xfce4-genmon-plugin xfce4-smartbookmark-plugin xfce4-timer-plugin || fail
        # Install screen saver
        apt-get install -y xfce4-screensaver xscreensaver-gl-extra xscreensaver-data-extra \
            xscreensaver-screensaver-bsod || fail
        # Install file manager
        apt-get install -y thunar libthunarx-3-0 thunar-data thunar-archive-plugin thunar-dropbox-plugin \
            thunar-media-tags-plugin thunar-vcs-plugin thunar-gtkhash thunar-volman || fail
    else
        # Install libgtk
        apt-get install -y libgtk-3-bin libgtk2.0-bin libgtk-3-dev libgtk2.0-dev || fail
        apt-get install -y gtk3-engines-xfce xfce4-notifyd mousepad xfce4-terminal \
            xfce4-taskmanager gnome-system-monitor lightdm-gtk-greeter-settings || fail
        # Install xfce-plugin
        apt-get install -y xfce4-battery-plugin xfce4-settings xfce4-clipman-plugin \
            xfce4-cpugraph-plugin xfce4-datetime-plugin xfce4-netload-plugin \
            xfce4-notes-plugin xfce4-places-plugin xfce4-sensors-plugin \
            xfce4-systemload-plugin xfce4-linelight-plugin xfce4-whiskermenu-plugin \
            xfce4-indicator-plugin xfce4-mailwatch-plugin xfce4-cpufreq-plugin \
            xfce4-diskperf-plugin xfce4-fsguard-plugin xfce4-genmon-plugin \
            xfce4-smartbookmark-plugin xfce4-timer-plugin xfce4-verve-plugin \
            xfce4-weather-plugin xfce4-appfinder xfce4-dict terminator || fail
        # Install screen saver
        apt-get install -y xscreensaver xscreensaver-gl-extra xscreensaver-data-extra \
            xscreensaver-screensaver-bsod || fail
        # Install file manager.
        apt-get install -y thunar thunar-data thunar-archive-plugin thunar-dropbox-plugin \
            thunar-media-tags-plugin thunar-vcs-plugin thunar-gtkhash thunar-volman || fail
    fi
    apt-get install -y gvfs gvfs-backends gvfs-common gvfs-daemons gvfs-fuse gvfs-libs || fail

    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        msg "Installating Chinese language supports."
        apt-get install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans \
            language-pack-gnome-zh-hans-base fonts-noto-cjk fonts-arphic-ukai fonts-arphic-uming || fail
    fi

    msg "Installation for the XFCE4 desktop finishes."
fi

if [ "x${MODE}" = "xapps" ]
then 
    msg "Begin to install the basic tier of desktop apps."
    apt-get install -y lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))

    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        wget -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb || fail
        apt-get install -y ./google-chrome.deb || fail
        rm -f google-chrome.deb || fail
    else
        apt-get install -y chromium-browser chromium-codecs-ffmpeg chromium-browser-l10n || fail
    fi

    apt-get install -y firefox qt5-default qt5-doc-html qt5-image-formats-plugins qt5-style-plugins gedit okular gnome-screenshot pdf2svg || fail

    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        apt-get install -y vim-gtk3 vim-gui-common || fail
    else
        if [ -d "/var/cache/app-info/xapian/default" ]; then
            chmod -R a+rX,u+w /var/cache/app-info/xapian/default || fail
        fi
        apt-get update -y || fail

        apt-get install -y vim-gnome || fail
    fi

    if [ "x${UBUNTU_VER}" = "x16.04" ]
    then
        dpkg --add-architecture i386 || fail
    fi
    apt-get install -y apt-transport-https || fail
    if [ -d "/var/cache/app-info/xapian/default" ]; then
        chmod -R a+rX,u+w /var/cache/app-info/xapian/default || fail
    fi
    apt-get update -y || fail && apt-get -y dist-upgrade || fail

    # Install CJK fonts and input methods.
    apt-get install -y fonts-wqy-zenhei || fail
    [ -d /usr/share/fonts/opentype ] || mkdir /usr/share/fonts/opentype
    git clone https://github.com/adobe-fonts/source-code-pro.git /usr/share/fonts/opentype/scp || fail
    /usr/bin/fc-cache -r -v && fc-cache -f || fail
    
    # Uninstall ibus if it is installed
    IBUS_INSTALLED=$(apt -qq --installed list ibus)
    if [[ "x$IBUS_INSTALLED" != "x" ]]; then
        apt-get remove -y ibus || fail
        apt-get autoremove -y || fail
    fi
    apt-get install -y fcitx fcitx-googlepinyin fcitx-table-wbpy fcitx-pinyin fcitx-sunpinyin fcitx-module-dbus || fail
    apt-get install -y fcitx-module-cloudpinyin fcitx-table-wubi || fail
    apt-get install -y at-spi2-core || fail
    
    # Additional packages for Chinese localization.
    if [ "x${WITH_CHINESE}" = "xtrue" ]
    then
        msg "Installating Chinese language supports."
        if [ "x${UBUNTU_VER}" = "x20.04" ]; then
            apt-get install -y fonts-noto-cjk-extra firefox-locale-zh-hans kde-config-fcitx || fail
        fi
        if [ "x${UBUNTU_VER}" = "x18.04" ]; then
            apt-get install -y firefox-locale-zh-hans fonts-noto-cjk-extra kde-config-fcitx || fail
        fi
        if [ "x${UBUNTU_VER}" = "x16.04" ]; then
            apt-get install -y kde-l10n-zhcn firefox-locale-zh-hans || fail
        fi
    fi

    # Finish installing localization.
    /etc/init.d/dbus start || fail

    apt-get install -f -y || fail && apt-get upgrade -y || fail && apt-get -y dist-upgrade || fail

    if [ "x${CUR_PY_VER}" == "xpy36" ] || [ "x${CUR_PY_VER}" == "xpy37+" ]
    then
        if [ "x${USE_CURL}" == "x1" ]
        then
            curl https://bootstrap.pypa.io/pip/get-pip.py -o /root/scripts/get-pip-3.py || fail
        else
            wget -O /root/scripts/get-pip-3.py https://bootstrap.pypa.io/pip/get-pip.py || fail
        fi
    else
        wget -O /root/scripts/get-pip-3.py https://github.com/cainmagi/Dockerfiles/releases/download/jlab-v1.1/get-pip-20.3.4.py || fail
    fi
    if [ "x${USE_CURL}" == "x1" ]
    then
        curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o /root/scripts/get-pip-2.py || fail
    else
        wget -O /root/scripts/get-pip-2.py https://bootstrap.pypa.io/pip/2.7/get-pip.py || fail
    fi
    if [ "x${UBUNTU_VER}" = "x20.04" ] || [ "x${UBUNTU_VER}" = "x18.04" ]
    then
        apt-get install -y python3-pip || fail
        python3 /root/scripts/get-pip-3.py --force-reinstall || fail
        python3 -m pip install matplotlib plotly Cython numpy scipy scikit-learn scikit-image ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail  
    else
        apt-get install -y python-pip python3-pip || fail
        python3 /root/scripts/get-pip-3.py --force-reinstall || fail && python2 /root/scripts/get-pip-2.py --force-reinstall || fail
        python3 -m pip install matplotlib plotly Cython numpy scipy scikit-learn scikit-image ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
        python2 -m pip install numpy --upgrade || fail
    fi

    apt-get install -y python3-sip python3-pyqt5 python3-tk || fail
    msg "Installation for the extra packages finishes."

    # Note that /usr/bin/python3 may be different from python3 especially when conda exists. This installation needs to follow the installation of python3-pyqt5.
    CURIN_PY_VER=$(/usr/bin/python3 /root/scripts/get-pyver.py 2>&1)
    if [ "x${CURIN_PY_VER}" == "xpy36" ]
    then
        /usr/bin/python3 -m pip install "PyQt5<=5.14" || fail
    fi

fi
