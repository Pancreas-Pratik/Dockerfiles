#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

MODE=desktop

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    case "$KEY" in
        MODE)  MODE=${VALUE} ;;
        *)   
    esac    
done

if [ "x${MODE}" = "xdesktop" ]
then
    apt-get install -y --no-install-recommends lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))
    # Install xfce4 Desktop
    apt-get install -y --no-install-recommends dbus-x11 libx11-6 libx11-data libx11-protocol-perl \
        libx11-xcb1 x11-apps x11-common x11-session-utils x11-utils x11-xkb-utils x11-xserver-utils || fail
    apt-get install -y --no-install-recommends xubuntu-desktop synaptic language-selector-gnome || fail
    # Install the xfce4 addons
    apt-get install -y --no-install-recommends xfce4 || fail
    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        apt-get install -y --no-install-recommends libxfce4panel-2.0-4 libxfce4ui-1-0 libxfce4ui-2-0 libxfce4ui-common \
            libxfce4util-common libxfce4util7 xfce4-appfinder xfce4-notifyd xfce4-panel xfce4-session xfce4-settings \
            gtk-update-icon-cache xfce4-indicator-plugin xfce4-screensaver xfce4-power-manager xfce4-pulseaudio-plugin \
            xfce4-screensaver xfce4-screenshooter xfce4-statusnotifier-plugin xfce4-terminal xfce4-whiskermenu-plugin \
            xfce4-cpugraph-plugin xfce4-dict xfce4-mailwatch-plugin xfce4-netload-plugin xfce4-notes-plugin xfce4-goodies \
            xfce4-places-plugin xfce4-systemload-plugin xfce4-taskmanager xfce4-verve-plugin xfce4-weather-plugin \
            xfce4-xkb-plugin xfce4-mpc-plugin xfpanel-switch xubuntu-community-wallpapers xul-ext-ubufox mousepad \
            ubuntu-sounds gnome-system-monitor || fail
        apt-get install -y --no-install-recommends thunar libthunarx-3-0 thunar-data thunar-archive-plugin \
            thunar-dropbox-plugin thunar-media-tags-plugin thunar-vcs-plugin thunar-gtkhash thunar-volman || fail
        apt-get install -y --no-install-recommends adwaita-icon-theme elementary-xfce-icon-theme hicolor-icon-theme \
            humanity-icon-theme tango-icon-theme gnome-icon-theme xubuntu-community-wallpapers-xenial \
            xubuntu-community-wallpapers-bionic xubuntu-community-wallpapers-trusty || fail
        apt-get install -y --no-install-recommends libgtk-3-bin libgtk2.0-bin libgtk-3-dev libgtk2.0-dev \
            libgirepository1.0-dev libgraphite2-utils imagemagick pavucontrol || fail
        apt-get install -y --no-install-recommends xfce4-battery-plugin xfce4-settings xfce4-clipman-plugin \
            xfce4-datetime-plugin xfce4-sensors-plugin xfce4-cpufreq-plugin xfce4-diskperf-plugin \
            xfce4-fsguard-plugin xfce4-genmon-plugin xfce4-smartbookmark-plugin xfce4-timer-plugin || fail
    else
        apt-get install -y --no-install-recommends gtk3-engines-xfce xfce4-notifyd \
            mousepad xfce4-taskmanager xfce4-terminal lightdm-gtk-greeter-settings \
            gnome-system-monitor || fail
        apt-get install -y --no-install-recommends thunar thunar-data thunar-archive-plugin thunar-dropbox-plugin \
            thunar-media-tags-plugin thunar-vcs-plugin thunar-gtkhash thunar-volman || fail
        apt-get install -y --no-install-recommends \
            libgtk-3-bin libgtk2.0-bin libgtk-3-dev libgtk2.0-dev || fail
        apt-get install -y --no-install-recommends xfce4-battery-plugin xfce4-settings \
            xfce4-clipman-plugin xfce4-cpugraph-plugin xfce4-datetime-plugin \
            xfce4-netload-plugin xfce4-notes-plugin xfce4-places-plugin \
            xfce4-sensors-plugin xfce4-systemload-plugin xfce4-linelight-plugin\
            xfce4-whiskermenu-plugin xfce4-indicator-plugin xfce4-mailwatch-plugin \
            xfce4-cpufreq-plugin xfce4-diskperf-plugin xfce4-fsguard-plugin \
            xfce4-genmon-plugin xfce4-smartbookmark-plugin xfce4-timer-plugin \
            xfce4-verve-plugin xfce4-weather-plugin xfce4-appfinder xfce4-dict || fail
    fi
    apt-get install -y --no-install-recommends \
        gvfs gvfs-backends gvfs-common gvfs-daemons gvfs-fuse gvfs-libs || fail

    if [ "x${WITH_CHINESE}" != "x" ]
    then
        msg "Installating Chinese language supports."
        apt-get install -y --no-install-recommends language-pack-zh-hans language-pack-zh-hans-base \
            language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base fonts-noto-cjk
    fi

    msg "Installation for the XFCE4 desktop finishes."
fi

if [ "x${MODE}" = "xapps" ]
then 
    apt-get install -y --no-install-recommends lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))

    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        wget -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb || fail
        apt-get install -y --no-install-recommends ./google-chrome.deb || fail
        rm -f google-chrome.deb || fail
    else
        apt-get install -y --no-install-recommends chromium-browser || fail
    fi

    apt-get install -y --no-install-recommends firefox qt5-default qt5-doc-html qt5-image-formats-plugins qt5-style-plugins codeblocks vlc smplayer gedit okular gnome-screenshot || fail

    if [ "x${WITH_CHINESE}" != "x" ]
    then
        mkdir -p /usr/share/codeblocks/locale/zh_CN || fail
        wget -O /usr/share/codeblocks/locale/zh_CN/CodeBlocks.mo https://github.com/cainmagi/Dockerfiles/releases/download/xubuntu-v1.3-u20.04/CodeBlocks_zhCN.mo || fail
        chmod +rwx /usr/share/codeblocks/locale --recursive || fail
    fi
    
    if [ "x${UBUNTU_VER}" = "x20.04" ]
    then
        apt-get install -y --no-install-recommends vim-gtk3 vim-gui-common || fail
        apt-get install -y --no-install-recommends nomacs nomacs-l10n || fail
        # Do not install notepadqq, install sublime instead.
        curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -
        add-apt-repository -y "deb https://download.sublimetext.com/ apt/stable/" || fail && apt-get update -y || fail
        apt-get install -y --no-install-recommends sublime-text || fail
        if [ "x${WITH_CHINESE}" != "x" ]
        then
            git clone -b st3 https://github.com/rexdf/ChineseLocalization.git ~/.config/sublime-text-3/Packages/ChineseLocalization || fail
        fi
    else
        apt-get install -y --no-install-recommends vim-gnome || fail
        add-apt-repository -y ppa:nomacs/stable || fail && apt-get update -y || fail && apt-get install -y nomacs || fail
        add-apt-repository -y ppa:notepadqq-team/notepadqq || fail && apt-get update -y || fail

        apt-get install -y --no-install-recommends notepadqq || fail
    fi
    
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg || fail
    install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ || fail
    sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list' || fail
    dpkg --add-architecture i386 || fail
    apt-get install -y --no-install-recommends apt-transport-https || fail
    apt-get update -y || fail && apt-get -y dist-upgrade || fail
    apt-get install -y --no-install-recommends code || fail

    # Install extensions for code
    CODE_EXTENSIONS="hookyqr.beautify
        bungcip.better-toml
        ms-vscode.cpptools
        formulahendry.code-runner
        streetsidesoftware.code-spell-checker
        ms-azuretools.vscode-docker
        grapecity.gc-excelviewer
        jaydenlin.google-complete-me
        ecmel.vscode-html-css
        ms-toolsai.jupyter
        james-yu.latex-workshop
        magicstack.magicpython
        davidanson.vscode-markdownlint
        pkief.material-icon-theme
        ms-python.python
        kevinrose.vsc-python-indent
        mechatroner.rainbow-csv
        vscode-icons-team.vscode-icons
        shd101wyy.markdown-preview-enhanced"
    for c_ext in ${CODE_EXTENSIONS}; do
        code --install-extension ${c_ext} --extensions-dir /usr/share/code/resources/app/extensions --user-data-dir ~/.vscode/settings || fail
    done

    if [ "x${WITH_CHINESE}" != "x" ]
    then
        code --install-extension ms-ceintl.vscode-language-pack-zh-hans --extensions-dir /usr/share/code/resources/app/extensions --user-data-dir ~/.vscode/settings || fail
    fi

    if [ "x${UBUNTU_VER}" = "x20.04" ] || [ "x${UBUNTU_VER}" = "x18.04" ]
    then
        wget https://github.com/peazip/PeaZip/releases/download/7.7.0/peazip_7.7.0.LINUX.x86_64.GTK2.deb -O peazip.deb || fail
        dpkg -i peazip.deb || fail && rm -f peazip.deb || fail
    else
        wget https://ufpr.dl.sourceforge.net/project/peazip/6.6.0/peazip_6.6.0.LINUX.GTK2-2_i386.deb -O peazip.deb || fail
        apt-get install -y --no-install-recommends libatk1.0-0:i386 libc6:i386 libcairo2:i386 libgdk-pixbuf2.0-0:i386 libglib2.0-0:i386 libgtk2.0-0:i386 libpango1.0-0:i386 libx11-6:i386 libcanberra-gtk-module:i386 || fail
        dpkg -i peazip.deb || fail && rm -f peazip.deb || fail
    fi

    # Install CJK fonts and input methods.
    apt-get install -y fonts-wqy-zenhei || fail
    [ -d /usr/share/fonts/opentype ] || mkdir /usr/share/fonts/opentype
    git clone https://github.com/adobe-fonts/source-code-pro.git /usr/share/fonts/opentype/scp || fail
    fc-cache -r -v || fail
    apt-get install -y fcitx fcitx-googlepinyin fcitx-table-wbpy fcitx-pinyin fcitx-sunpinyin || fail
    apt-get install -y at-spi2-core || fail
    /etc/init.d/dbus start || fail

    apt-get install -f -y || fail && apt-get upgrade -y || fail && apt-get -y dist-upgrade || fail

    curl https://bootstrap.pypa.io/get-pip.py -o /root/get-pip.py || fail
    if [ "x${UBUNTU_VER}" = "x20.04" ] || [ "x${UBUNTU_VER}" = "x18.04" ]
    then
        apt-get install -y python3-pip || fail
        python3 /root/get-pip.py --force-reinstall || fail
        pip3 install matplotlib Cython numpy scipy scikit-image ipython jupyterlab h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
    else
        apt-get install -y python-pip python3-pip || fail
        python3 /root/get-pip.py --force-reinstall || fail && python2 /root/get-pip.py --force-reinstall || fail
        pip3 install matplotlib Cython numpy scipy scikit-image ipython jupyterlab h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
        pip2 install numpy --upgrade || fail
    fi
    apt-get install -y python3-sip python3-pyqt5 python3-tk || fail
    msg "Installation for the extra packages finishes."
fi

