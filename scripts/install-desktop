#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
  echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
  msg "Error : $?"
  exit 1
}

function mcd {
  mkdir -p "$1" || fail
  cd "$1" || fail
}

MODE=desktop

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    case "$KEY" in
        MODE)  MODE=${VALUE} ;;
        *)   
    esac    
done

if [ "x${MODE}" = "xdesktop" ]
then 
    # Install xfce4 Desktop
    apt-get install -y --no-install-recommends dbus-x11 libx11-6 libx11-data libx11-protocol-perl \
        libx11-xcb1 x11-apps x11-common x11-session-utils x11-utils x11-xkb-utils x11-xserver-utils || fail
    apt-get install -y --no-install-recommends xubuntu-desktop || fail
    # Install the xfce4 addons
    apt-get install -y --no-install-recommends xfce4 || fail
    apt-get install -y --no-install-recommends gtk3-engines-xfce xfce4-notifyd \
        mousepad xfce4-taskmanager xfce4-terminal lightdm-gtk-greeter-settings || fail
    apt-get install -y --no-install-recommends \
        libgtk-3-bin libgtk2.0-bin libgtk-3-dev libgtk2.0-dev || fail
    apt-get install -y --no-install-recommends xfce4-battery-plugin xfce4-settings \
        xfce4-clipman-plugin xfce4-cpugraph-plugin xfce4-datetime-plugin \
        xfce4-netload-plugin xfce4-notes-plugin xfce4-places-plugin \
        xfce4-sensors-plugin xfce4-systemload-plugin xfce4-linelight-plugin\
        xfce4-whiskermenu-plugin xfce4-indicator-plugin xfce4-mailwatch-plugin \
        xfce4-cpufreq-plugin xfce4-diskperf-plugin xfce4-fsguard-plugin \
        xfce4-genmon-plugin xfce4-smartbookmark-plugin xfce4-timer-plugin \
        xfce4-verve-plugin xfce4-weather-plugin xfce4-appfinder xfce4-artwork xfce4-dict || fail
    apt-get install -y --no-install-recommends \
        gvfs gvfs-backends gvfs-common gvfs-daemons gvfs-fuse gvfs-libs || fail
    msg "Installation for the XFCE4 desktop finishes."
fi

if [ "x${MODE}" = "xapps" ]
then 
    apt-get install -y --no-install-recommends qt5-default qt5-doc-html qt5-image-formats-plugins qt5-style-plugins chromium-browser vim-gnome codeblocks vlc smplayer gedit okular gnome-screenshot || fail
    add-apt-repository -y ppa:nomacs/stable || fail && apt-get update -y || fail && apt-get install -y nomacs || fail

    add-apt-repository -y ppa:notepadqq-team/notepadqq || fail
    curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg || fail
    mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg || fail
    sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list' || fail
    dpkg --add-architecture i386 || fail
    apt-get install -y --no-install-recommends apt-transport-https || fail
    apt-get update -y || fail
    apt-get -y dist-upgrade || fail
    apt-get install -y --no-install-recommends notepadqq code || fail
    wget https://ufpr.dl.sourceforge.net/project/peazip/6.6.0/peazip_6.6.0.LINUX.GTK2-2_i386.deb -O peazip.deb || fail
    apt-get install -y --no-install-recommends libatk1.0-0:i386 libc6:i386 libcairo2:i386 libgdk-pixbuf2.0-0:i386 libglib2.0-0:i386 libgtk2.0-0:i386 libpango1.0-0:i386 libx11-6:i386 libcanberra-gtk-module:i386 || fail
    dpkg -i peazip.deb || fail && rm -f peazip.deb || fail

    apt-get install -y fonts-wqy-zenhei || fail
    [ -d /usr/share/fonts/opentype ] || mkdir /usr/share/fonts/opentype
    git clone https://github.com/adobe-fonts/source-code-pro.git /usr/share/fonts/opentype/scp || fail
    fc-cache -f -v || fail
    apt-get install -y fcitx fcitx-googlepinyin fcitx-table-wbpy fcitx-pinyin fcitx-sunpinyin || fail
    apt-get install -y at-spi2-core || fail
    /etc/init.d/dbus start || fail

    apt-get install -f -y || fail && apt-get upgrade -y || fail && apt-get -y dist-upgrade || fail

    curl https://bootstrap.pypa.io/get-pip.py -o /root/get-pip.py || fail
    apt-get install -y python-pip python3-pip || fail
    python3 /root/get-pip.py --force-reinstall || fail && python2 /root/get-pip.py --force-reinstall || fail
    pip3 install matplotlib Cython numpy scipy scikit-image ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
    pip2 install numpy --upgrade || fail
    apt-get install -y python3-sip python3-pyqt5 python3-tk || fail
    chmod +x /usr/local/bin/docker-entrypoint || fail
    msg "Installation for the extra packages finishes."
fi

if [ "x${MODE}" = "xvnc" ]
then 
    apt-get -y update -qq || fail && apt-get -y install git || fail

    apt-get -y install fontconfig-config fonts-dejavu-core libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libdrm2 libelf1 libfontconfig1 libfontenc-dev libfontenc1 libfreetype6 libfreetype6-dev libgl1 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libglu1-mesa libglvnd0 libglx-mesa0 libglx0 libice6 libjpeg-turbo8 libllvm8 libpciaccess0 libpixman-1-0 libpng-dev libpng-tools libpng16-16 libpthread-stubs0-dev libsensors4 libsm6 libtasn1-bin libx11-6 libx11-data libx11-dev libx11-doc libx11-xcb1 libxau-dev libxau6 libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-shape0 libxcb-sync1 libxcb1 libxcb1-dev libxcomposite1 libxcursor1 libxdamage1 libxdmcp-dev libxdmcp6 libxext6 libxfixes3 libxfont-dev libxfont2 libxft2 libxi6 libxinerama1 libxkbfile1 libxmu6 libxmuu1 libxpm4 libxrandr2 libxrender1 libxshmfence1 libxt6 libxtst6 libxv1 libxxf86dga1 libxxf86vm1 ucf x11-common x11-utils x11-xkb-utils x11proto-core-dev x11proto-dev xauth xorg-sgml-doctools xtrans-dev pciutils lm-sensors libxcb-doc mesa-utils xfonts-100dpi xfonts-75dpi xfonts-scalable nickle cairo-5c xorg-docs-core || fail

    apt-get -y update || fail && apt-get -y upgrade || fail && apt-get -f -y install || fail && apt-get -y dist-upgrade || fail && apt-get -y autoremove || fail && apt-get -y autoclean || fail

    wget -O tigervncserver_1.11.80.deb http://tigervnc.bphinz.com/nightly/ubuntu-18.04LTS/amd64/tigervncserver_1.11.80+20201204gitd43c1b3c-1ubuntu1_amd64.deb
    dpkg -i tigervncserver_1.11.80.deb
    rm -f tigervncserver_1.11.80.deb

    SOURCE_PATH="/apps/source/"
    BUILD_PATH="/usr/local/bin"
    mkdir -p $SOURCE_PATH || fail

    # Install noVNC
    msg "Install noVNC."
    cd $SOURCE_PATH || fail
    git clone https://github.com/novnc/noVNC.git || fail
    ln -s $SOURCE_PATH/noVNC/utils/launch.sh $BUILD_PATH/noVNC

    msg "Installation for VNC finished."
fi
