#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR_ERR='\033[1;31m'
COLOR='\033[1;32m'

function msg {
    echo -e "${COLOR}$(date): $1${RESET}"
}

function msgerr {
    echo -e "${COLOR_ERR}$(date): $1${RESET}"
}

function fail {
    msgerr "Error : $?"
    exit 1
}

function mcd {
    mkdir -p "$1" || fail
    cd "$1" || fail
}

function nvm_has {
  type "$1" > /dev/null 2>&1
}

function nvm_default_install_dir {
    [ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm"
}

function nvm_install_dir {
    if [ -n "$NVM_DIR" ]; then
        printf %s "${NVM_DIR}"
    else
        nvm_default_install_dir
    fi
}

function install_nvm {
    msg "Installing NVM, version: $1"
    wget -O- https://raw.githubusercontent.com/nvm-sh/nvm/v$1/install.sh | bash || fail
}

function install_nodejs {
    msg "Installing Node.js, version: $1"
    RUN_NVM_DIR="$(nvm_install_dir)" || fail
    msg "Finding NVM in: ${RUN_NVM_DIR}".
    bash -c ". $RUN_NVM_DIR/nvm.sh \
    && . $RUN_NVM_DIR/bash_completion \
    && nvm install v$1 \
    && nvm alias default v$1 \
    && nvm use default" || fail
}

function run_with_nodejs {
    RUN_NVM_DIR="$(nvm_install_dir)" || fail
    bash -c ". $RUN_NVM_DIR/nvm.sh \
    && . $RUN_NVM_DIR/bash_completion \
    && nvm use default \
    && $1" || fail
}

VERSION=unset
EXTRA_TIERS=1
CUR_PYTHON_VER="py37+"
SET_RUSTC=true
CONDA_META_PATH=$(python3 /root/scripts/get-conda-path.py -m conda-meta 2>&1)

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    if [[ $KEY != '--*' ]]
    then
        VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    fi
    case "$KEY" in
        --norust)    SET_RUSTC=true ;;
        version)     VERSION=${VALUE} ;;
        ver)         VERSION=${VALUE} ;;
        VERSION)     VERSION=${VALUE} ;;
        ex_tiers)    EXTRA_TIERS=${VALUE} ;;
        py_ver)      CUR_PYTHON_VER=${VALUE} ;;
        *)
    esac
done

if [[ "x${ADDR_PROXY}" != "xunset" ]]; then
    export http_proxy=${ADDR_PROXY};
    export https_proxy=${ADDR_PROXY};
    export no_proxy="127.0.0.1, localhost";
    msg "Successfully set the proxy to ${ADDR_PROXY}."
    USE_CURL=0
else
    USE_CURL=1
fi


if nvm_has "mamba" ; then
    PYPKG_MANAGER="mamba"
else
    PYPKG_MANAGER="conda"
fi


# Unset the version
if [ "x${VERSION}" = "xunset" ]
then
    # If unset, fallback to pip.
    python3 -m pip install jupyterlab || fail
    install_nvm 0.39.3 || fail
    install_nodejs 18.12.1 || fail
else
    # Prepare dependencies
    apt-get update -qq || fail
    apt-get install -y libffi-dev libssl-dev || fail

    # Install rustc and meson.
    if [ "x${SET_RUSTC}" = "xtrue" ]; then
        if ! nvm_has "cargo" ; then
            msg "Install Rust-lang and cargo new."
            if [ "x${USE_CURL}" == "x1" ]
            then
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y || fail
            else
                wget -O- https://sh.rustup.rs | sh -s -- -y || fail
            fi
            source $HOME/.cargo/env || fail
            rustup toolchain install stable || fail
            rustup default stable || fail
            cargo install cargo-c || fail
        fi
    fi
fi


# Install version 1
if [ "x${VERSION}" = "x1" ]
then
    # Install Jupyter Lab
    msg "Installing Jupyter Lab, ver 1.2.21."
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        CONDA_TEMP_PKGS="\"immutables>=0.17\" \"typing-extensions>=4.2.0\""
    else
        if [ "x${CUR_PYTHON_VER}" = "xpy36" ]; then
            CONDA_TEMP_PKGS="immutables=0.15 typing-extensions=4.1.1"
        else
            CONDA_TEMP_PKGS="\"immutables<0.15\" \"typing-extensions>=3.10.0,<4\""
        fi
    fi
    ${PYPKG_MANAGER} install -y -c conda-forge "nbconvert>=6.0.7" "jupyter>=1.0" "jupyter_core>=4.7" "notebook>=6.2" "pyzmq>=22.0" ${CONDA_TEMP_PKGS} || fail
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        ${PYPKG_MANAGER} install -y -c conda-forge "jupyterlab<=1.2.21" || fail
    else
        ${PYPKG_MANAGER} install -y -c conda-forge "jupyterlab<=1.2.21" "jupyter_client<=7.1.0" "jupyter_server<=1.13.1" || fail
    fi
    echo "jupyterlab=$(jupyter lab --version)" >> "${CONDA_META_PATH}/pinned" || fail

    # Install nodejs
    if ! nvm_has "nvm"; then
        install_nvm 0.39.1 || fail
    fi
    install_nodejs 12.22.12 || fail

    # Install packages required by extensions
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="\"bqplot>=0.11.4\" \"tensorboard>=1.14,<=2.2\" \"ipydatawidgets>=4.2.0\" \"jupyterlab_code_formatter=1.1.0\" isort"
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe black" || fail
        else
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} black=22.3.0 platformdirs=2.4.0"
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        ${PYPKG_MANAGER} install -y -c conda-forge "ipywidgets>=7.5" "nbdime>=2.0" "nbresuse>=0.3.3,<=0.3.6" jupytext=1.8.2 ipympl=0.5.2 bokeh "jupyter_bokeh<=3.0.2" pynvml "jupyterlab-nvdashboard<=0.5.0" jupyterlab-git=0.11.0 ${CONDA_TEMP_PKGS} || fail
        python3 -m pip install jupyterlab_hdf sidecar==0.3.0 || fail
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        ${PYPKG_MANAGER} install -y -c plotly -c defaults -c conda-forge "plotly=4.14.3" "python-kaleido=0.2.1" "chart-studio=1.1.0" "jupyterlab-dash>=0.1.0a3" || fail
        ${PYPKG_MANAGER} install -y -c pyviz pyviz_comms || fail
        ${PYPKG_MANAGER} install -y -c conda-forge yarn ipycanvas || fail
        python3 -m pip install jupyter-tensorboard || fail
    fi

    # Install all extensions.
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="jupyterlab-plotly@4.14.3 plotlywidget@4.14.3 jupyterlab_tensorboard jupyterlab-dash bqplot @mflevine/jupyterlab_html @pyviz/jupyterlab_pyviz@0.8.0 jupyterlab-datawidgets@7.0.0 @ryantam626/jupyterlab_code_formatter@1.1.0"
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe@0.2.1" || fail
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        run_with_nodejs "jupyter labextension install nbdime-jupyterlab jupyterlab-nvdashboard @jupyterlab/github @jupyterlab/hdf5 @jupyterlab/google-drive @jupyterlab/mathjax3-extension @jupyterlab/katex-extension jupyterlab-topbar-extension jupyterlab-system-monitor jupyter-matplotlib@0.7.1 @krassowski/jupyterlab_go_to_definition@0.7.1 @bokeh/jupyter_bokeh@1.2.0 @jupyter-widgets/jupyterlab-sidecar @jupyterlab/git@0.11.0 jupyterlab-jupytext@1.1.1 @jupyter-widgets/jupyterlab-manager ipycanvas ${CONDA_TEMP_PKGS} --no-build" || fail
    fi

    # Register some server extensions.
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        run_with_nodejs "jupyter serverextension enable --py jupyterlab_code_formatter" || fail
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            run_with_nodejs "jupyter serverextension enable --py jupyterlab_iframe" || fail
        fi
    fi

    # Build
    if [ "x${EXTRA_TIERS}" = "x3" ] || [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        msg "Installing Jupyter Lab extensions, finally building."
        run_with_nodejs "jupyter lab build" || fail
    fi
fi

# Install version 2
if [ "x${VERSION}" = "x2" ]
then
    # Install Jupyter Lab
    msg "Installing Jupyter Lab, ver 2.3.2."
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        CONDA_TEMP_PKGS="\"immutables>=0.17\" \"typing-extensions>=4.2.0\""
    else
        if [ "x${CUR_PYTHON_VER}" = "xpy36" ]; then
            CONDA_TEMP_PKGS="immutables=0.15 typing-extensions=4.1.1"
        else
            CONDA_TEMP_PKGS="\"immutables<0.15\" \"typing-extensions>=3.10.0,<4\""
        fi
    fi
    ${PYPKG_MANAGER} install -y -c conda-forge "nbconvert>=6.0.7" "jupyter>=1.0" "jupyter_core>=4.7" "notebook>=6.2" "pyzmq>=22.0" ${CONDA_TEMP_PKGS} || fail
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        ${PYPKG_MANAGER} install -y -c conda-forge jupyterlab=2.3.2 || fail
    else
        ${PYPKG_MANAGER} install -y -c conda-forge jupyterlab=2.3.2 "jupyter_client<=7.1.0" "jupyter_server<=1.13.1" || fail
    fi
    echo "jupyterlab=$(jupyter lab --version)" >> "${CONDA_META_PATH}/pinned" || fail

    # Install nodejs
    if ! nvm_has "nvm"; then
        install_nvm 0.39.1 || fail
    fi
    install_nodejs 12.22.12 || fail

    # Install packages required by extensions
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="\"bqplot>=0.11.4\" \"tensorboard>=1.14,<=2.8\" \"ipydatawidgets>=4.2.0\" \"jupyterlab_code_formatter=1.3.6\" isort"
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe black" || fail
        else
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} black=22.3.0 platformdirs=2.4.0"
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        ${PYPKG_MANAGER} install -y -c conda-forge "ipywidgets>=7.5" "nbdime>=2.0" "nbresuse>=0.3.3,<=0.3.6" jupytext=1.8.2 jupyter-lsp-python=0.9.3 ipympl=0.5.8 sidecar=0.4.0 xeus-python ptvsd bokeh "jupyter_bokeh<=3.0.2" pynvml "jupyterlab-nvdashboard<=0.5.0" python-language-server "jupyterlab-git<=0.24.0" ${CONDA_TEMP_PKGS} || fail
        python3 -m pip install jupyterlab_hdf || fail
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        ${PYPKG_MANAGER} install -y -c plotly -c defaults -c conda-forge "plotly>=5.7.0" "python-kaleido>=0.2.1" "chart-studio>=1.1.0" "jupyterlab-dash>=0.1.0a3" || fail
        ${PYPKG_MANAGER} install -y -c pyviz pyviz_comms || fail
        ${PYPKG_MANAGER} install -y -c conda-forge yarn ipycanvas || fail
        python3 -m pip install jupyter-tensorboard || fail
    fi

    # Install all extensions.
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="jupyterlab-plotly@5.7.0 jupyterlab_tensorboard jupyterlab-dash bqplot @pyviz/jupyterlab_pyviz@1.0.3 jupyterlab-datawidgets@7.0.0 @ryantam626/jupyterlab_code_formatter@1.3.6"
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe@0.2.3" || fail
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        run_with_nodejs "jupyter labextension install nbdime-jupyterlab jupyterlab-nvdashboard @jupyterlab/github @jupyterlab/hdf5 @jupyterlab/google-drive @jupyterlab/mathjax3-extension @jupyterlab/katex-extension jupyterlab-topbar-extension jupyterlab-system-monitor jupyter-matplotlib@0.7.4 @krassowski/jupyterlab_go_to_definition jupyterlab-jupytext@1.2.2 @jupyterlab/toc @bokeh/jupyter_bokeh@2.0.4 @krassowski/jupyterlab-lsp@2.1.2 @jupyter-widgets/jupyterlab-sidecar @jupyterlab/debugger @jupyter-widgets/jupyterlab-manager ipycanvas ${CONDA_TEMP_PKGS} --no-build" || fail
    fi

    # Register some server extensions.
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        run_with_nodejs "jupyter serverextension enable --py jupyterlab_code_formatter" || fail
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            run_with_nodejs "jupyter serverextension enable --py jupyterlab_iframe" || fail
        fi
    fi

    # Build
    if [ "x${EXTRA_TIERS}" = "x3" ] || [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        msg "Installing Jupyter Lab extensions, finally building."
        run_with_nodejs "jupyter lab build" || fail
    fi
fi

# Install version 3
if [ "x${VERSION}" = "x3" ]
then
    # Install Jupyter Lab
    msg "Installing Jupyter Lab, ver 3.3.3."
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        CONDA_TEMP_PKGS="\"immutables>=0.17\" \"typing-extensions>=4.2.0\""
    else
        if [ "x${CUR_PYTHON_VER}" = "xpy36" ]; then
            CONDA_TEMP_PKGS="immutables=0.15 typing-extensions=4.1.1"
        else
            CONDA_TEMP_PKGS="\"immutables<0.15\" \"typing-extensions>=3.10.0,<4\""
        fi
    fi
    ${PYPKG_MANAGER} install -y -c conda-forge "nbconvert>=6.0.7" "jupyter>=1.0" "jupyter_core>=4.7" "notebook>=6.2" "pyzmq>=22.0" ${CONDA_TEMP_PKGS} || fail
    if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
        ${PYPKG_MANAGER} install -y -c conda-forge jupyterlab=3.3.3 || fail
    else
        ${PYPKG_MANAGER} install -y -c conda-forge jupyterlab=3.3.3 jupyter_client=7.1.0 jupyter_server=1.13.1 || fail
    fi
    echo "jupyterlab=$(jupyter lab --version)" >> "${CONDA_META_PATH}/pinned" || fail

    # Install nodejs
    if ! nvm_has "nvm"; then
        install_nvm 0.39.1 || fail
    fi
    install_nodejs 16.14.2 || fail

    # Install packages required by extensions
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="\"bqplot>=0.12.29\" \"jupyterlab_code_formatter>=1.4.10\" isort \"ipydatawidgets>=4.2.0\""
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe black" || fail
        else
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} black=22.3.0 platformdirs=2.4.0"
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} \"jupyter_bokeh>=3.0.4\"" || fail
        else
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} \"jupyter_bokeh>=3.0.2\"" || fail
        fi
        run_with_nodejs "${PYPKG_MANAGER} install -y -c conda-forge \"ipywidgets>=7.6.3\" \"nbdime>=3.1.0\" \"nbresuse>=0.4.0\" \"ipympl>=0.7.0\" \"sidecar>=0.5.1\" \"jupytext>=1.11.3\" xeus-python ptvsd jupyterlab-lsp python-language-server \"ipylab>=0.4.1\" \"jupyterlab-git>=0.36.0\" bokeh ${CONDA_TEMP_PKGS}" || fail
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            run_with_nodejs "python3 -m pip install \"jupyterlab_nvdashboard>=0.6.0\"" || fail
        fi
        run_with_nodejs "python3 -m pip install \"jupyterlab-github>=3.0.1\" \"jupyterlab-hdf==1.2.0\"" || fail
        run_with_nodejs "${PYPKG_MANAGER} install -y -c conda-forge jupyterlab-language-pack-zh-cn=3.3.post0" || fail
        run_with_nodejs "python3 -m pip install jupyterlab-topbar lckr-jupyterlab-variableinspector jupyterlab-system-monitor" || fail
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        run_with_nodejs "${PYPKG_MANAGER} install -y -c plotly \"plotly>=5.7.0\" \"python-kaleido>=0.2.1\" \"chart-studio>=1.1.0\"" || fail
        run_with_nodejs "${PYPKG_MANAGER} install -y -c pyviz pyviz_comms" || fail
        run_with_nodejs "${PYPKG_MANAGER} install -y -c conda-forge ipycanvas" || fail
        run_with_nodejs "python3 -m pip install jupyterlab-drawio ipydagred3" || fail
        run_with_nodejs "python3 -m pip install git+https://github.com/cliffwoolley/jupyter_tensorboard.git@520c98f5a167db47eee45db1cd6affdc08c21265" || fail
        run_with_nodejs "python3 -m pip install git+https://github.com/chaoleili/jupyterlab_tensorboard.git@8f5f201a2e7b7a96ed4bd7dd16c26443df020b26" || fail
    fi

    # Install all extensions (if manually installation is required).
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        CONDA_TEMP_PKGS="jupyterlab-plotly@5.7.0 jupyterlab-datawidgets@7.0.0"
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            CONDA_TEMP_PKGS="${CONDA_TEMP_PKGS} jupyterlab_iframe@0.4.3" || fail
        fi
    else
        CONDA_TEMP_PKGS=""
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        run_with_nodejs "jupyter labextension install nbdime-jupyterlab @jupyterlab/toc @jupyterlab/debugger @jupyterlab/mathjax3-extension @jupyterlab/katex-extension jupyterlab-topbar-text @jupyterlab/hdf5@1.2.0 ${CONDA_TEMP_PKGS} --no-build" || fail
        run_with_nodejs "jupyter server extension enable jupyterlab_github" || fail
    fi
    if [ "x${EXTRA_TIERS}" = "x2" ]; then
        run_with_nodejs "jupyter serverextension enable --py jupyterlab_code_formatter" || fail
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ]; then
            run_with_nodejs "jupyter serverextension enable --py jupyterlab_iframe" || fail
        fi
    fi

    # Build
    if [ "x${EXTRA_TIERS}" = "x3" ] || [ "x${EXTRA_TIERS}" = "x2" ] || [ "x${EXTRA_TIERS}" = "x1" ]; then
        msg "Installing Jupyter Lab extensions, finally building."
        run_with_nodejs "jupyter lab build" || fail
    fi
fi
