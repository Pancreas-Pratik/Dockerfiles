#!/bin/bash

# Make bashline configurations.
set -e
RESET='\033[0m'
COLOR='\033[1;32m'

function msg {
    echo -e "${COLOR}$(date): $1${RESET}"
}

function fail {
    msg "Error : $?"
    exit 1
}

function mcd {
    mkdir -p "$1" || fail
    cd "$1" || fail
}

function nvm_has {
    type "$1" > /dev/null 2>&1
}

function jlab_has {
    if nvm_has $1; then
        printf %s "true"
    else
        printf %s "false"
    fi
}

MODE=python
JLAB_VERSION=unset
JLAB_EXTRA_TIERS=2
JLAB_INSTALL_MODE='pip'
CUR_PY_VER=$(python3 /root/scripts/get-pyver.py 2>&1)
HAS_CONDA=$(python3 /root/scripts/get-conda-path.py -m use-conda 2>&1)

for ARGUMENT in "$@"
do
    KEY=$(echo $ARGUMENT | cut -f1 -d=)
    VALUE=$(echo $ARGUMENT | cut -f2 -d=)   
    case "$KEY" in
        MODE)               MODE=${VALUE} ;;
        JLAB_VER)           JLAB_VERSION=${VALUE} ;;
        JLAB_EXTIERS)       JLAB_EXTRA_TIERS=${VALUE} ;;
        JLAB_IMODE)         JLAB_INSTALL_MODE=${VALUE} ;;
        *)   
    esac    
done

if [ "x${MODE}" = "xpython" ]
then
    apt-get -y install lsb-release lsb-core || fail
    UBUNTU_VER=$(echo $(lsb_release -a | head -n 4 | tail -1 | awk '{ print $2 }'))

    apt-get install -y --no-install-recommends apt-transport-https || fail
    apt-get install -y at-spi2-core || fail
    apt-get update -y || fail && apt-get -y dist-upgrade || fail
    
    if [ "x${CUR_PY_VER}" == "xpy36" ] || [ "x${CUR_PY_VER}" == "xpy37+" ]
    then
        curl https://bootstrap.pypa.io/get-pip.py -o /root/scripts/get-pip-3.py || fail
    else
        if [ "x${CUR_PY_VER}" == "xpy35" ]
        then
            curl https://bootstrap.pypa.io/3.5/get-pip.py -o /root/scripts/get-pip-3.py || fail
        else
            curl https://bootstrap.pypa.io/3.4/get-pip.py -o /root/scripts/get-pip-3.py || fail
        fi
    fi
    if [ "x${UBUNTU_VER}" = "x20.04" ] || [ "x${UBUNTU_VER}" = "x18.04" ]
    then
        apt-get install -y python3-pip || fail
        python3 /root/scripts/get-pip-3.py --force-reinstall || fail
        python3 -m pip install matplotlib plotly Cython numpy scipy scikit-learn scikit-image ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
    else
        curl https://bootstrap.pypa.io/2.7/get-pip.py -o /root/scripts/get-pip-2.py || fail
        apt-get install -y python-pip python3-pip || fail
        python3 /root/scripts/get-pip-3.py --force-reinstall || fail && python2 /root/scripts/get-pip-2.py --force-reinstall || fail
        python3 -m pip install matplotlib plotly Cython numpy scipy scikit-learn scikit-image ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six Jinja2 Flask || fail
        python2 -m pip install numpy --upgrade || fail
    fi
    msg "Installation for the extra packages finishes."
fi

if [ "x${MODE}" = "xjupyter" ]
then
    HASUSED_CONDA="false"
    if [ "x${JLAB_INSTALL_MODE}" = "xconda" ] && [ "x${HAS_CONDA}" = "xtrue" ]; then
        if [ "x${CUR_PYTHON_VER}" = "xpy37+" ] || [ "x${CUR_PYTHON_VER}" = "xpy36" ]; then
            msg "Installation for the Jupyter Lab: conda mode."
            # Fix the pyver of this conda.
            CONDA_PYTHON_VER=$(python3 /root/scripts/get-pyver.py -p 2>&1)
            CONDA_META_PATH=$(python3 /root/scripts/get-conda-path.py -m conda-meta 2>&1)
            echo "${CONDA_PYTHON_VER}" >> "${CONDA_META_PATH}/pinned" || fail
            # Run the script with conda.
            bash /root/scripts/install-jlab-conda version=${JLAB_VERSION} ex_tiers=${JLAB_EXTRA_TIERS} py_ver=${CUR_PY_VER} || fail
            HASUSED_CONDA="true"
        fi
    fi
    if [ "x${HASUSED_CONDA}" != "xtrue" ]; then
        msg "Installation for the Jupyter Lab: pip mode."
        # Fix the pyver of this conda.
        if [ "x${HAS_CONDA}" = "xtrue" ] then;
            CONDA_PYTHON_VER=$(python3 /root/scripts/get-pyver.py -p 2>&1)
            CONDA_META_PATH=$(python3 /root/scripts/get-conda-path.py -m conda-meta 2>&1)
            echo "${CONDA_PYTHON_VER}" >> "${CONDA_META_PATH}/pinned" || fail
        fi
        # Run the script with pip.
        bash /root/scripts/install-jlab version=${JLAB_VERSION} ex_tiers=${JLAB_EXTRA_TIERS} py_ver=${CUR_PY_VER} || fail
    fi
    msg "Installation for the Jupyter Lab finishes."
fi
